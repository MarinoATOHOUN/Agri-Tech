# Generated by Django 5.2.6 on 2025-09-15 21:17

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('type_agriculture', models.CharField(choices=[('vivriere', 'Agriculture vivrière'), ('commerciale', 'Agriculture commerciale'), ('mixte', 'Agriculture mixte')], default='vivriere', help_text="Type d'agriculture pratiquée par l'agriculteur", max_length=20, verbose_name="Type d'agriculture")),
                ('zone_geographique', models.CharField(help_text="Localisation géographique de l'exploitation agricole", max_length=200, verbose_name='Zone géographique')),
                ('telephone', models.CharField(blank=True, help_text='Numéro de téléphone pour les notifications SMS', max_length=20, null=True, verbose_name='Numéro de téléphone')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création du compte')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Utilisateur',
                'verbose_name_plural': 'Utilisateurs',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ConseilAgricole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200, verbose_name='Titre du conseil')),
                ('contenu', models.TextField(help_text='Conseil détaillé et personnalisé', verbose_name='Contenu du conseil')),
                ('type_conseil', models.CharField(choices=[('culture', 'Conseil de culture'), ('rendement', 'Amélioration du rendement'), ('economique', 'Conseil économique'), ('technique', 'Conseil technique'), ('saisonnier', 'Conseil saisonnier')], default='technique', max_length=20, verbose_name='Type de conseil')),
                ('priorite', models.CharField(choices=[('basse', 'Basse'), ('moyenne', 'Moyenne'), ('haute', 'Haute'), ('urgente', 'Urgente')], default='moyenne', max_length=10, verbose_name='Priorité')),
                ('lu', models.BooleanField(default=False, verbose_name="Lu par l'utilisateur")),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_expiration', models.DateTimeField(blank=True, help_text="Date après laquelle le conseil n'est plus pertinent", null=True, verbose_name="Date d'expiration")),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conseils', to=settings.AUTH_USER_MODEL, verbose_name='Agriculteur')),
            ],
            options={
                'verbose_name': 'Conseil agricole',
                'verbose_name_plural': 'Conseils agricoles',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='Culture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(help_text='Ex: Maïs, Riz, Tomate, etc.', max_length=100, verbose_name='Nom de la culture')),
                ('date_culture', models.DateField(help_text='Date à laquelle la culture a été plantée', verbose_name='Date de plantation/semis')),
                ('quantite_semee', models.DecimalField(decimal_places=2, help_text='Quantité de semences utilisées (en kg ou unité appropriée)', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Quantité semée')),
                ('unite_semence', models.CharField(default='kg', help_text='Ex: kg, sacs, litres, etc.', max_length=20, verbose_name='Unité de mesure des semences')),
                ('cout_achat_semences', models.DecimalField(decimal_places=2, help_text="Montant total dépensé pour l'achat des semences (en FCFA)", max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name="Coût d'achat des semences")),
                ('cout_main_oeuvre', models.DecimalField(decimal_places=2, help_text="Montant total dépensé pour la main d'œuvre (en FCFA)", max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name="Coût de la main d'œuvre")),
                ('zone_geographique', models.CharField(help_text='Localisation précise de cette culture', max_length=200, verbose_name='Zone géographique')),
                ('superficie', models.DecimalField(decimal_places=2, help_text='Superficie en hectares', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Superficie cultivée')),
                ('notes', models.TextField(blank=True, help_text='Observations, conseils, ou informations supplémentaires', null=True, verbose_name='Notes additionnelles')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name="Date d'enregistrement")),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Dernière modification')),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cultures', to=settings.AUTH_USER_MODEL, verbose_name='Agriculteur')),
            ],
            options={
                'verbose_name': 'Culture',
                'verbose_name_plural': 'Cultures',
                'ordering': ['-date_culture'],
            },
        ),
        migrations.CreateModel(
            name='Depense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(help_text='Description détaillée de la dépense', max_length=200, verbose_name='Description de la dépense')),
                ('categorie', models.CharField(choices=[('engrais', 'Engrais et amendements'), ('pesticides', 'Pesticides et herbicides'), ('equipement', 'Équipements et outils'), ('carburant', 'Carburant et énergie'), ('transport', 'Transport'), ('main_oeuvre', "Main d'œuvre supplémentaire"), ('irrigation', 'Irrigation'), ('stockage', 'Stockage et conservation'), ('autre', 'Autre')], default='autre', max_length=20, verbose_name='Catégorie de dépense')),
                ('montant', models.DecimalField(decimal_places=2, help_text='Montant en FCFA', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Montant de la dépense')),
                ('date_depense', models.DateField(help_text='Date à laquelle la dépense a été effectuée', verbose_name='Date de la dépense')),
                ('fournisseur', models.CharField(blank=True, help_text='Nom du fournisseur ou du prestataire', max_length=100, null=True, verbose_name='Fournisseur')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes additionnelles')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name="Date d'enregistrement")),
                ('culture', models.ForeignKey(blank=True, help_text='Culture à laquelle cette dépense est liée (optionnel)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='depenses_associees', to='agri_app.culture', verbose_name='Culture associée')),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='depenses', to=settings.AUTH_USER_MODEL, verbose_name='Agriculteur')),
            ],
            options={
                'verbose_name': 'Dépense',
                'verbose_name_plural': 'Dépenses',
                'ordering': ['-date_depense'],
            },
        ),
        migrations.CreateModel(
            name='Recolte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_recolte', models.DateField(help_text='Date à laquelle la récolte a été effectuée', verbose_name='Date de récolte')),
                ('quantite_recoltee', models.DecimalField(decimal_places=2, help_text='Quantité totale récoltée', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Quantité récoltée')),
                ('unite_recolte', models.CharField(default='kg', help_text='Ex: kg, sacs, tonnes, etc.', max_length=20, verbose_name='Unité de mesure de la récolte')),
                ('prix_vente_unitaire', models.DecimalField(decimal_places=2, help_text='Prix de vente par unité (en FCFA)', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Prix de vente unitaire')),
                ('depenses_liees_recolte', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Coûts de récolte, transport, stockage, etc. (en FCFA)', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Dépenses liées à la récolte')),
                ('qualite_recolte', models.CharField(choices=[('excellente', 'Excellente'), ('bonne', 'Bonne'), ('moyenne', 'Moyenne'), ('faible', 'Faible')], default='bonne', max_length=20, verbose_name='Qualité de la récolte')),
                ('notes', models.TextField(blank=True, help_text='Observations sur la qualité, les conditions, etc.', null=True, verbose_name='Notes sur la récolte')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name="Date d'enregistrement")),
                ('culture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recoltes', to='agri_app.culture', verbose_name='Culture associée')),
            ],
            options={
                'verbose_name': 'Récolte',
                'verbose_name_plural': 'Récoltes',
                'ordering': ['-date_recolte'],
            },
        ),
    ]
